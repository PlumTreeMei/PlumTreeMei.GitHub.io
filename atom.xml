<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-12-29T00:06:21.336Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>梅干菜</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MERN项目部署指南</title>
    <link href="http://example.com/2024/12/27/MERN%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/"/>
    <id>http://example.com/2024/12/27/MERN%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97/</id>
    <published>2024-12-27T21:47:46.000Z</published>
    <updated>2024-12-29T00:06:21.336Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本指南使用环境："><a href="#本指南使用环境：" class="headerlink" title="本指南使用环境："></a>本指南使用环境：</h2><p>Ubuntu 22.04</p><p>Mongodb 8.0</p><h1 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h1><h2 id="1-Ubuntu-服务器"><a href="#1-Ubuntu-服务器" class="headerlink" title="1. Ubuntu 服务器"></a>1. Ubuntu 服务器</h2><p>安装 Node.js 和 npm 连接到您的服务器，运行以下命令安装 Node.js 和 npm。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install nodejs npm</span><br></pre></td></tr></table></figure><h2 id="2-安装-mongodb"><a href="#2-安装-mongodb" class="headerlink" title="2. 安装 mongodb"></a>2. 安装 mongodb</h2><p>参考网站 <a href="https://www.mongodb.com/zh-cn/docs/manual/tutorial/install-mongodb-on-ubuntu/">https://www.mongodb.com/zh-cn/docs/manual/tutorial/install-mongodb-on-ubuntu/</a></p><p>安装 MongoDB Community Edition<br>按照以下步骤使用 apt 软件包管理器安装 MongoDB Community Edition。</p><h3 id="1-导入公钥"><a href="#1-导入公钥" class="headerlink" title="1. 导入公钥"></a>1. 导入公钥</h3><p>从终端安装 gnupg 和 curl（如果尚未安装）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install gnupg curl</span><br></pre></td></tr></table></figure><p>要导入 MongoDB 公共 GPG 密钥，请运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://www.mongodb.org/static/pgp/server-8.0.asc | \</span><br><span class="line"><span class="built_in">sudo</span> gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg \</span><br><span class="line">--dearmor</span><br></pre></td></tr></table></figure><h3 id="2-创建列表文件"><a href="#2-创建列表文件" class="headerlink" title="2. 创建列表文件"></a>2. 创建列表文件</h3><p>为您的 Ubuntu 版本创建列表文件 &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;mongodb-org-8.0.list。</p><p>为 Ubuntu 22.04 (Jammy) 创建列表文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/8.0 multiverse&quot;</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/apt/sources.list.d/mongodb-org-8.0.list</span><br></pre></td></tr></table></figure><h3 id="3-重新加载包数据库"><a href="#3-重新加载包数据库" class="headerlink" title="3. 重新加载包数据库"></a>3. 重新加载包数据库</h3><p>发出以下命令以重新加载本地软件包数据库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get update</span><br></pre></td></tr></table></figure><h3 id="4-安装-MongoDB-Community-Server"><a href="#4-安装-MongoDB-Community-Server" class="headerlink" title="4. 安装 MongoDB Community Server"></a>4. 安装 MongoDB Community Server</h3><p>您可以安装最新稳定版本的 MongoDB 或指定版本的 MongoDB。<br>要安装最新的稳定版本，请执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install -y mongodb-org</span><br></pre></td></tr></table></figure><p>在 Ubuntu 中安装 MongoDB 时，如需对过程中遇到的错误进行故障排查，请参阅故障排查指南。</p><p>启动 mogodb 服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start mongod</span><br></pre></td></tr></table></figure><p>检查服务运行状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status mongod</span><br></pre></td></tr></table></figure><p>配置文件通常在配置文件通常位于 &#x2F;etc&#x2F;mongod.conf</p><h2 id="3-安装-Nginx"><a href="#3-安装-Nginx" class="headerlink" title="3.安装 Nginx"></a>3.安装 Nginx</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><h2 id="4-安装-PM2"><a href="#4-安装-PM2" class="headerlink" title="4.安装 PM2"></a>4.安装 PM2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pm2 -g</span><br></pre></td></tr></table></figure><h2 id="3-连接到-github-目录"><a href="#3-连接到-github-目录" class="headerlink" title="3.连接到 github 目录"></a>3.连接到 github 目录</h2><p>使用 SSH 进行身份验证。这是推荐的方式，特别适用于服务器环境。</p><p>生成 SSH 密钥 在服务器上生成一个新的 SSH 密钥对：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C <span class="string">&quot;your_email@example.com&quot;</span></span><br></pre></td></tr></table></figure><p>按提示操作即可，通常密钥会保存在 ~&#x2F;.ssh&#x2F;id_ed25519 中。</p><p>添加 SSH 密钥到 GitHub</p><p>运行以下命令查看生成的公钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_ed25519.pub</span><br></pre></td></tr></table></figure><p>复制显示的公钥内容。<br>登录 GitHub，进入「Settings」-&gt;「SSH and GPG keys」-&gt;「New SSH Key」，粘贴公钥并保存。<br>随后下载自己的项目代码</p><h2 id="4-配置-Nginx、PM2-和-SSL"><a href="#4-配置-Nginx、PM2-和-SSL" class="headerlink" title="4.配置 Nginx、PM2 和 SSL"></a>4.配置 Nginx、PM2 和 SSL</h2><p>构筑前端静态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>创建目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /var/www/html/项目名字</span><br></pre></td></tr></table></figure><p>将配置链接到 site-enabled</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /etc/nginx/sites-available/list /etc/nginx/sites-enabled/</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将 build 出来的文件复制过去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp -r dist/* /var/www/html/项目名字/</span><br></pre></td></tr></table></figure><p>使用免费 SSL 证书 Let’s encrypt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install certbot python3-certbot-nginx</span><br><span class="line">sudo certbot --nginx -d 域名 -d www.域名</span><br></pre></td></tr></table></figure><p>在&#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;下修改 default 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    server_name #你的域名;</span><br><span class="line"></span><br><span class="line">    root /var/www/html/项目名字;</span><br><span class="line"></span><br><span class="line">    index index.html index.htm index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files $uri /index.html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /api/ &#123;</span><br><span class="line">        proxy_pass http://localhost:5000;  # 指向你的后端服务地址</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &#x27;upgrade&#x27;;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    listen 443 ssl; # managed by Certbot</span><br><span class="line">    ssl_certificate /etc/letsencrypt/live/域名/fullchain.pem; # managed by Certbot</span><br><span class="line">    ssl_certificate_key /etc/letsencrypt/live/域名/privkey.pem; # managed by Certbot</span><br><span class="line">    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot</span><br><span class="line">    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    if ($host = 域名) &#123;</span><br><span class="line">        return 301 https://$host$request_uri;</span><br><span class="line">    &#125; # managed by Certbot</span><br><span class="line"></span><br><span class="line">    if ($host = 域名) &#123;</span><br><span class="line">        return 301 https://$host$request_uri;</span><br><span class="line">    &#125; # managed by Certbot</span><br><span class="line"></span><br><span class="line">    listen 80;</span><br><span class="line">    server_name 域名；</span><br><span class="line"></span><br><span class="line">    server_name _;</span><br><span class="line">    return 404; # managed by Certbot</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>检验并重启 nginx 服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br><span class="line">sudo systemctl restart nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进入 server 文件夹以后启动后端项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start index.js --name &quot;backend&quot; //你的项目启动名称</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;本指南使用环境：&quot;&gt;&lt;a href=&quot;#本指南使用环境：&quot; class=&quot;headerlink&quot; title=&quot;本指南使用环境：&quot;&gt;&lt;/a&gt;本指南使用环境：&lt;/h2&gt;&lt;p&gt;Ubuntu 22.04&lt;/p&gt;
&lt;p&gt;Mongodb 8.0&lt;/p&gt;
&lt;h1 id=&quot;前提</summary>
      
    
    
    
    
    <category term="自用" scheme="http://example.com/tags/%E8%87%AA%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>流浪同人女自建指南（1）：论坛系统选择</title>
    <link href="http://example.com/2024/12/17/%E6%B5%81%E6%B5%AA%E5%90%8C%E4%BA%BA%E5%A5%B3%E8%87%AA%E5%BB%BA%E6%8C%87%E5%8D%97%EF%BC%881%EF%BC%89%EF%BC%9A%E8%AE%BA%E5%9D%9B%E7%B3%BB%E7%BB%9F%E9%80%89%E6%8B%A9/"/>
    <id>http://example.com/2024/12/17/%E6%B5%81%E6%B5%AA%E5%90%8C%E4%BA%BA%E5%A5%B3%E8%87%AA%E5%BB%BA%E6%8C%87%E5%8D%97%EF%BC%881%EF%BC%89%EF%BC%9A%E8%AE%BA%E5%9D%9B%E7%B3%BB%E7%BB%9F%E9%80%89%E6%8B%A9/</id>
    <published>2024-12-18T04:27:24.000Z</published>
    <updated>2024-12-29T07:20:20.497Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>稍微整理了一下市面上常见的几种论坛系统软件。首先要说明，没有哪一种论坛软件是完美的，他们都有各自的优点和缺点。所以在挑选论坛系统之前，应当做的事情是明确自己的需求和预算，然后找几个对标的论坛注册和体验一下。接着可以去这几个论坛官方的社区里看看指南和文档，了解一下详情。本文将会介绍和分析四款在市面上最为流行的论坛软件系统。</p><h1 id="1-Discuz！"><a href="#1-Discuz！" class="headerlink" title="1.Discuz！"></a>1.Discuz！</h1><p>Discuz！是目前国内使用最多、接受度最高、支持也最多的系统。大家所熟悉的比如随缘居之类的论坛都使用了 discuz。如今，想要开发一个基于 discuz! 的论坛非常方便，你可以在官网上下载它的源代码，也可以花点钱找专业人士帮你量身定制。然而，discuz! 并非传统意义上的开源软件，社区生态并不是很好，小白容易被坑。它目前的版权全部属于腾讯，因此在使用的时候也需要遵循由腾讯拟定的协议。目前市面上最新的免费版本 为 dsicuz！ X3.5。</p><table><thead><tr><th><strong>指标</strong></th><th><strong>评价与说明</strong></th></tr></thead><tbody><tr><td><strong>技术框架</strong></td><td>PHP + MySQL</td></tr><tr><td><strong>插件种类</strong></td><td>非常多，但大部分需收费且质量良莠不齐</td></tr><tr><td><strong>功能性</strong></td><td>内置门户与积分系统等</td></tr><tr><td><strong>安全性</strong></td><td>官方停止更新，依赖社区修复漏洞与发布非官方更新版本，容易被攻击</td></tr><tr><td><strong>迁移能力</strong></td><td>插件兼容性差，迁移难度较高</td></tr><tr><td><strong>维护难度</strong></td><td>整个系统比较过时，缺少文档和官方维护。但国内相关从业者多，有钱可以兜底。</td></tr><tr><td><strong>移动端支持</strong></td><td>需插件与模板适配，不支持 PWA，需自行开发 App</td></tr><tr><td><strong>用户体验</strong></td><td>比较陈旧、但国内用户相对比较习惯，接受度高</td></tr><tr><td><strong>推荐最低硬件要求</strong></td><td>1 核 CPU 512MB RAM 10GB 存储</td></tr></tbody></table><h1 id="2-Discourse"><a href="#2-Discourse" class="headerlink" title="2.Discourse"></a>2.Discourse</h1><p>Discourse 是一个对服务器要求较高的开源论坛系统，适合规模大的社区。它的功能强大、免费插件多、界面也非常现代化、在外网国外有非常活跃的社区环境和良好的生态。但是国内目前使用 discourse 的人并不多，因此想要使用 discourse 论坛只能自行学习搭建或者使用官方的托管服务。然而，官方的托管服务月费要起码 100 刀以上还有诸多限制，对于同人论坛来说不是什么好的选择。至于自建论坛的话，则需要一点的计算机相关知识和较高的英语水平，二次开发难度较大。</p><table><thead><tr><th><strong>指标</strong></th><th><strong>评价与说明</strong></th></tr></thead><tbody><tr><td><strong>技术框架</strong></td><td>Ruby on Rails + Ember.js + PostgreSQL</td></tr><tr><td><strong>插件种类</strong></td><td>有非常多免费插件和模板</td></tr><tr><td><strong>功能性</strong></td><td>积分系统比较简陋，但有徽章系统、信任等级机制和内置聊天群组</td></tr><tr><td><strong>安全性</strong></td><td>有自动备份、SSL 证书自动更新、官方持续维护、有比较稳定的自动更新机制</td></tr><tr><td><strong>迁移能力</strong></td><td>支持多个平台的迁移，工具完善</td></tr><tr><td><strong>维护难度</strong></td><td>国内讨论少且涉及的技术栈在国内比较冷门。文档丰富但杂，需较高学习能力</td></tr><tr><td><strong>移动端支持</strong></td><td>响应式设计，支持 PWA</td></tr><tr><td><strong>用户体验</strong></td><td>设计现代化，国内用户需适应使用方式</td></tr><tr><td><strong>推荐最低硬件要求</strong></td><td>2 核 CPU 4GB RAM 20GB 存储</td></tr></tbody></table><h1 id="3-NodeBB"><a href="#3-NodeBB" class="headerlink" title="3.NodeBB"></a>3.NodeBB</h1><p>NodeBB 是基于 Node.js 构建的一个开源论坛软件。它同样拥有丰富的免费插件和现代化的界面，性能也不错。不过相对于 discourse 来说它的社区规模并没有那么大，官方提供的托管服务也特别昂贵。官方维护还算比较积极，但是对中文内容的支持似乎并不是很好。如果本身对 Node.js 比较熟悉，可以尝试看看。还有一个优点就是，官方支持用户自行选择数据库的类型。</p><table><thead><tr><th><strong>指标</strong></th><th><strong>评价与说明</strong></th></tr></thead><tbody><tr><td><strong>技术框架</strong></td><td>Node.js + Express.js+ （数据库可以自选）</td></tr><tr><td><strong>插件种类</strong></td><td>有很多免费插件和模板</td></tr><tr><td><strong>功能性</strong></td><td>有内置的实时聊天功能</td></tr><tr><td><strong>安全性</strong></td><td>官方持续维护</td></tr><tr><td><strong>迁移能力</strong></td><td>有社区插件支持</td></tr><tr><td><strong>维护难度</strong></td><td>二次开发门槛比 Discourse 低、技术栈相对热门些</td></tr><tr><td><strong>移动端支持</strong></td><td>响应式设计，支持 PWA</td></tr><tr><td><strong>用户体验</strong></td><td>设计现代化，国内用户需适应使用方式</td></tr><tr><td><strong>推荐最低硬件要求</strong></td><td>2 核 CPU 2GB RAM 20GB 存储</td></tr></tbody></table><h1 id="4-Flarum"><a href="#4-Flarum" class="headerlink" title="4.Flarum"></a>4.Flarum</h1><p>Flarum 是一款轻量级的开源论坛软件，对服务器的要求比较低。它的界面非常现代化和简洁，具有高效的性能和灵活的插件支持。功能虽然不多但是胜在非常精简，使用起来容易上手。特别适合要求不高的小型社区。</p><table><thead><tr><th><strong>指标</strong></th><th><strong>评价与说明</strong></th></tr></thead><tbody><tr><td><strong>技术框架</strong></td><td>PHP + Laravel + MySQL</td></tr><tr><td><strong>插件种类</strong></td><td>插件灵活但生态仍在成长中</td></tr><tr><td><strong>功能性</strong></td><td>功能比较精简</td></tr><tr><td><strong>安全性</strong></td><td>官方持续维护</td></tr><tr><td><strong>迁移能力</strong></td><td>比较有限</td></tr><tr><td><strong>维护难度</strong></td><td>维护简单，适合 PHP 开发者</td></tr><tr><td><strong>移动端支持</strong></td><td>响应式设计，但没有 PWA</td></tr><tr><td><strong>用户体验</strong></td><td>设计精简，上手容易</td></tr><tr><td><strong>推荐最低硬件要求</strong></td><td>1 核 CPU 1GB RAM 10GB 存储</td></tr></tbody></table><p>最后来个人版排名<br>喜欢传统论坛：Discuz &gt; Flarum &gt; NodeBB &gt;Discourse<br>预算低： Flarum &gt; NodeBB &gt; Discourse &gt; Discuz<br>插件数量和质量：Discoure &gt; NodeBB &gt; Discuz &gt; Flarum<br>稳定性和长期维护：Discourse &gt; NodeBB ≈ Flarum &gt; Discuz<br>社区生态环境： Discourse &gt; NodeBB &gt; Flarum &gt; Discuz<br>二次开发简易度：Flarum &gt; NodeBB &gt; Discuz &gt; Discourse</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;稍微整理了一下市面上常见的几种论坛系统软件。首先要说明，没有哪一种论坛软件是完美的，他们都有各自的优点和缺点。所以在挑选论坛系统之前，应当做</summary>
      
    
    
    
    
    <category term="同人论坛" scheme="http://example.com/tags/%E5%90%8C%E4%BA%BA%E8%AE%BA%E5%9D%9B/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2024/12/17/hello-world/"/>
    <id>http://example.com/2024/12/17/hello-world/</id>
    <published>2024-12-18T02:06:00.845Z</published>
    <updated>2024-12-18T02:06:00.845Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
